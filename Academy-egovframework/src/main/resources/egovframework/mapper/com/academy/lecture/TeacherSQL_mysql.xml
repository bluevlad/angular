<?xml version="1.0" encoding="UTF-8"?><!--
	수정일          		수정자                          수정내용
  ===========      ========    =================
 *2023.08.00		rainend		강사관리
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="teacher">


    <select id="teacherList" parameterType="egovframework.com.academy.member.service.MemberVO"
    							 resultType="egovframework.com.academy.member.service.MemberVO">
                   SELECT
                        AA.USER_ID, AA.USER_NM, AA.IS_USE, AA.EMAIL, AA.USER_POSITION
                        , (CASE IFNULL(AA.IS_USE, 'Y')
								  	WHEN 'Y' THEN '공개'
									WHEN 'N' THEN '비공개' END) ISUSENM
                        , AA.REG_DT, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
                        , (CASE IFNULL(ON_OPENYN, 'Y')
								  	WHEN 'Y' THEN '활성'
									WHEN 'N' THEN '비활성' END) ON_OPENYNNM
                        , (SELECT MIN(SUBJECT_CD) FROM ACM_MEMBER_SUBJECT WHERE USER_ID = AA.USER_ID) AS SUBJECT_CD
                        , (SELECT GROUP_CONCAT(DD.SUBJECT_NM  ORDER BY DD.SUBJECT_NM ASC SEPARATOR '/')
                           FROM ACM_MEMBER_SUBJECT CC
                           LEFT JOIN ACM_SUBJECT_INFO DD ON CC.SUBJECT_CD = DD.SUBJECT_CD
                           WHERE USER_ID = AA.USER_ID
                           ) AS SUBJECT_NM
                        , (SELECT MIN(CATEGORY_CODE) FROM ACM_MEMBER_CATEGORY WHERE USER_ID = AA.USER_ID) AS CATEGORY_CD
                        , (SELECT GROUP_CONCAT('['+DD.NAME+']' ORDER BY CC.CATEGORY_CODE ASC SEPARATOR ',')
                           FROM ACM_MEMBER_CATEGORY CC
                           LEFT JOIN ACM_CATEGORY_INFO DD ON CC.CATEGORY_CODE = DD.CODE
                           WHERE USER_ID = AA.USER_ID
                           ) AS CATEGORY_NM
                        , MAX(BB.SEQ) SEQ
                    FROM ACM_MEMBER AA
                    LEFT JOIN ACM_MEMBER_CATEGORY BB ON AA.USER_ID = BB.USER_ID
                    WHERE AA.USER_ROLE = 'PRF'
                    AND AA.IS_USE = 'Y'
			        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCategory)">
                        AND BB.CATEGORY_CODE = #{SEARCHCATEGORY}
                    </if>
			        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchKeyword)">
                        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCondition)">
                            <if test="searchCondition == 1">
								AND INSTR(AA.USER_ID, #{searchKeyword}) <![CDATA[ > ]]> 0
                            </if>
                            <if test="searchCondition == 2">
								AND INSTR(AA.USER_NM, #{searchKeyword}) <![CDATA[ > ]]> 0
                            </if>
                        </if>
                        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isEmpty(searchCondition)">
                            AND (
								INSTR(AA.USER_ID, #{searchKeyword}) <![CDATA[ > ]]> 0
								OR INSTR(AA.USER_NM, #{searchKeyword}) <![CDATA[ > ]]> 0
                            )
                        </if>
                    </if>
                    GROUP BY AA.USER_ID, AA.USER_NM, AA.IS_USE, AA.EMAIL, AA.USER_POSITION, 
                                  AA.REG_DT, AA.UPD_DT, AA.USER_ROLE, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
		        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isEmpty(searchCategory)">
                 ORDER BY CATEGORY_CD, SUBJECT_CD, USER_NM
                </if>
		        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCategory)">
                  <choose>
                    <when test='OnOffDiv == "F"'>
                    WHERE OFF_OPENYN =  'Y'
                ORDER BY CATEGORY_CD, OFF_SEQ, SUBJECT_CD, SEQ, 
                (CASE IS_USE WHEN 'Y' THEN 1 ELSE 2 END), (CASE OFF_OPENYN WHEN 'Y' THEN 1 ELSE 2 END), (CASE ON_OPENYN WHEN 'Y' THEN 1 ELSE 2 END)
                    </when>
                    <when test='OnOffDiv == "O"'>
                    WHERE ON_OPENYN =  'Y'
                ORDER BY CATEGORY_CD, ON_SEQ, SUBJECT_CD, SEQ, 
                (CASE IS_USE WHEN 'Y' THEN 1 ELSE 2 END), (CASE OFF_OPENYN WHEN 'Y' THEN 1 ELSE 2 END), (CASE ON_OPENYN WHEN 'Y' THEN 1 ELSE 2 END)
                    </when>
                    <otherwise>
                ORDER BY CATEGORY_CD, SEQ, SUBJECT_CD, SEQ, 
                (CASE IS_USE WHEN 'Y' THEN 1 ELSE 2 END), (CASE OFF_OPENYN WHEN 'Y' THEN 1 ELSE 2 END), (CASE ON_OPENYN WHEN 'Y' THEN 1 ELSE 2 END)
    				</otherwise>
                  </choose>
                </if>
        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isEmpty(searchCategory)">
        LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
        </if>
    </select>

    <select id="teacherListCount" parameterType="egovframework.com.academy.member.service.MemberVO" resultType="int">
        SELECT COUNT(*) FROM (
            SELECT
                COUNT(AA.USER_ID)
            FROM ACM_MEMBER AA
            LEFT JOIN ACM_MEMBER_CATEGORY BB ON AA.USER_ID = BB.USER_ID
            WHERE AA.USER_ROLE = 'PRF'
            AND AA.IS_USE = 'Y'
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCategory)">
                AND BB.CATEGORY_CODE = #{SEARCHCATEGORY}
            </if>
            <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchKeyword)">
                <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCondition)">
                    <if test="SEARCHTYPE == 1">
						AND INSTR(AA.USER_ID, #{searchCondition}) <![CDATA[ > ]]> 0
                    </if>
                    <if test="SEARCHTYPE == 2">
						AND INSTR(AA.USER_NM, #{searchCondition}) <![CDATA[ > ]]> 0
                    </if>
                </if>
                <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isEmpty(searchCondition)">
                    AND (
						INSTR(AA.USER_ID, #{searchKeyword}) <![CDATA[ > ]]> 0
						OR INSTR(AA.USER_NM, #{searchKeyword}) <![CDATA[ > ]]> 0
                    )
                </if>
            </if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCategory)">
                  <choose>
                    <when test='OnOffDiv == "F"'>
                    AND AA.OFF_OPENYN =  'Y'
                    </when>
                    <when test='OnOffDiv == "O"'>
                    AND AA.ON_OPENYN =  'Y'
                    </when>
                    <otherwise>
                    </otherwise>
                  </choose>
                </if>
            GROUP BY AA.USER_ID, AA.USER_NM, AA.IS_USE, AA.EMAIL, AA.REG_DT, AA.UPD_DT, AA.USER_ROLE, AA.BIRTH_DAY
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchCategory)">
            , BB.SEQ
            </if>

        ) TBL
    </select>

    <select id="teacherDetail" parameterType="egovframework.com.academy.member.service.MemberVO"
    							 resultType="egovframework.com.academy.member.service.MemberVO">
        SELECT 
        	USER_ID, USER_NM, USER_PWD, USER_POSITION, SEX, USER_ROLE, ADMIN_ROLE, BIRTH_DAY, EMAIL,
            PHONE_NO, TEL_NO, ZIP_CODE, ADDRESS1, ADDRESS2, CATEGORY_CODE, USER_POINT, REMARK, MEMO, PAYMENT,
            PIC1, PIC2, PIC3, PIC4, PROFILE, ACCOUNT, IPINDI, IS_USE,
            REG_DT, REG_ID, UPD_DT, UPD_ID,
            OFF_PAYMENT, OFF_PIC1, OFF_PIC2, OFF_PIC3, OFF_PIC4, OFF_PIC5, ON_OPENYN, OFF_OPENYN,
            OFF_MOVIE_PAYMENT, TITLE, OFF_TITLE, PROFILE_SUMMARY, BOOK_LOG_SUMMARY, ISOK_SMS, ISOK_EMAIL 
        FROM ACM_MEMBER
        WHERE USER_ID = #{userId}
    </select>

    <insert id="insertTeacher">
        INSERT INTO ACM_MEMBER(
            USER_ID, USER_NM, USER_PWD, USER_POSITION, SEX, USER_ROLE, ADMIN_ROLE, BIRTH_DAY, EMAIL,
            PHONE_NO, TEL_NO, ZIP_CODE, ADDRESS1, ADDRESS2, CATEGORY_CODE, USER_POINT, REMARK, MEMO, PAYMENT,
            PIC1, PIC2, PIC3, PIC4, PROFILE, ACCOUNT, IPINDI, IS_USE,
            REG_DT, REG_ID, UPD_DT, UPD_ID,
            OFF_PAYMENT, OFF_PIC1, OFF_PIC2, OFF_PIC3, OFF_PIC4, OFF_PIC5, ON_OPENYN, OFF_OPENYN,
            OFF_MOVIE_PAYMENT, TITLE, OFF_TITLE, PROFILE_SUMMARY, BOOK_LOG_SUMMARY, ISOK_SMS, ISOK_EMAIL
        ) VALUES(
            #{userId}, #{userNm}, #{userPwd}, #{userPosition}, #{sex}, #{userRole}, #{adminRole}, #{birthDay}, #{email},
            #{phoneNo}, #{telNo}, #{zipCode}, #{address1}, #{address2}, #{categoryCode}, #{userPoint}, #{remark}, #{memo}, #{payment},
            #{pic1}, #{pic2}, #{pic3}, #{pic4}, #{profile}, #{account}, #{ipindi}, #{isUse},
            now(), #{regId}, now(), #{updId}, 
            #{offPayment}, #{offPic1}, #{offPic2}, #{offPic3}, #{offPic4}, #{offPic5}, #{onOpenyn}, #{offOpenyn},
            #{offMoviePayment}, #{title}, #{offTitle}, #{profileSummary}, #{bookLogSummary}, #{isokSms}, #{isokEmail}
        )
    </insert>
	
    <update id="updateTeacher">
        UPDATE ACM_MEMBER
            SET USER_NM = #{userNm}
            , USER_PWD = #{userPwd}
            , USER_POSITION = #{userPosition}
            , SEX = #{sex}
            , USER_ROLE = #{userRole}
            , ADMIN_ROLE = #{adminRole}
            , BIRTH_DAY = #{birthDay}
			, EMAIL = #{email}
			, PHONE_NO = #{phoneNo}
			, TEL_NO = #{telNo}
			, ZIP_CODE = #{zipCode}
			, ADDRESS1 = #{address1}
			, ADDRESS2 = #{address2}
			, CATEGORY_CODE = #{categoryCode}
			, USER_POINT = #{userPoint}
			, REMARK = #{remark}
			, MEMO = #{memo}
			, PAYMENT = #{payment}
			, PIC1 = #{pic1}
			, PIC2 = #{pic2}
			, PIC3 = #{pic3}
			, PIC4 = #{pic4}
			, PROFILE = #{profile}
			, ACCOUNT = #{account}
			, IPINDI = #{ipindi}
			, IS_USE = #{isUse}
			, OFF_PAYMENT = #{offPayment}
			, OFF_PIC1 = #{offPic1}
			, OFF_PIC2 = #{offPic2}
			, OFF_PIC3 = #{offPic3}
			, OFF_PIC4 = #{offPic4}
			, OFF_PIC5 = #{offPic5}
			, ON_OPENYN = #{onOpenyn}
			, OFF_OPENYN = #{offOpenyn}
			, OFF_MOVIE_PAYMENT = #{offMoviePayment}
			, TITLE = #{title}
			, OFF_TITLE = #{offTitle}
			, PROFILE_SUMMARY = #{profileSummary}
			, BOOK_LOG_SUMMARY = #{bookLogSummary}
			, ISOK_SMS = #{isokSms}
			, ISOK_EMAIL = #{isokEmail}
			, UPD_DT = now()
			, UPD_ID = #{updId}
        WHERE USER_ID = #{userId}
    </update>

    <delete id="deleteTeacher">
        DELETE FROM ACM_MEMBER WHERE USER_ID = #{userId}
    </delete>

</mapper>