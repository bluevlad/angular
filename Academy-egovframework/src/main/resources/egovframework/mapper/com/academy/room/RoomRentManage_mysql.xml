<?xml version="1.0" encoding="UTF-8"?><!--
	수정일          수정자                          수정내용
  ===========      ========    =================
 *  2020.05.21			rainend				독서실 관리
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RoomRentManage">

	<!-- 독서실 정보 목록 -->
	<select id="selectRoomRentList" parameterType="egovframework.com.academy.room.service.RoomVO" 
										resultType="egovframework.com.academy.room.service.RoomVO">
		SELECT room_cd, room_num, rent_seq, user_id, rent_start, rent_end, extend_yn, rent_type, ord_id, rent_memo, pay_type, 
				reg_dt, reg_id, upd_dt, upd_id
		FROM acm_room_rent a
		WHERE 1 = 1
        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchKeyword)">
        AND a.user_id LIKE '%' #{searchKeyword} '%'
        </if>
		ORDER BY room_cd ASC, room_num ASC, rent_seq DESC
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>

	<!-- 독서실 총갯수 -->
	<select id="selectRoomRentListTotCnt" parameterType="egovframework.com.academy.room.service.RoomVO" resultType="int">
		SELECT COUNT(*) totcnt
		FROM acm_room_rent
		WHERE 1 = 1
        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(searchKeyword)">
        AND user_id LIKE '%' #{searchKeyword} '%'
        </if>
	</select>

	<!-- 독서실  상세정보 -->
	<select id="selectRoomRentDetail" parameterType="egovframework.com.academy.room.service.RoomVO" 
										resultType="egovframework.com.academy.room.service.RoomVO">
		SELECT room_cd, room_num, rent_seq, user_id, rent_start, rent_end, extend_yn, rent_type, ord_id, rent_memo, pay_type, 
				reg_dt, reg_id, upd_dt, upd_id
		FROM acm_room_rent a
		WHERE a.room_cd = #{roomCd}
		And a.room_num = #{roomNum}
		And a.rent_seq = #{rentSeq}
	</select>

	<!-- 독서실 총갯수 -->
	<select id="selectRoomSeq" parameterType="egovframework.com.academy.room.service.RoomVO" resultType="java.lang.Integer">
		SELECT IFNULL(MAX(rent_seq),0)+1
		FROM acm_room_rent
        WHERE room_cd = #{roomCd} 
        and room_num = #{roomNum}
	</select>
 
	<!-- 독서실정보 등록 -->
    <insert id="insertRoomRent">
		INSERT acm_room_rent (
			room_cd, room_num, rent_seq, user_id, rent_start, rent_end, extend_yn, rent_type, ord_id, rent_memo, pay_type, 
				reg_dt, reg_id, upd_dt, upd_id
		) VALUES (
			#{roomCd}, #{roomNum}, #{rentSeq}, #{userId}, #{rentStart}, #{rentEnd}, #{extendYn}, #{rentType}, #{ordId}, #{rentMemo}, #{payType}, 
				now(), #{regId}, now(), #{updId}
		)
   	</insert>
 
	<!-- 독서실정보 변경 -->
    <update id="updateRoomRent">
   		UPDATE acm_room_rent
   		SET
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(userId)">
   			user_id = #{userId},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(rentStart)">
   			rent_start = #{rentStart},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(rentEnd)">
   			rent_end = #{rentEnd},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(extendYn)">
   			extend_yn = #{extendYn},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(rentType)">
   			rent_type = #{rentType},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(ordId)">
   			ord_id = #{ordId},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(rentMemo)">
   			rent_memo = #{rentMemo},
   			</if>
	        <if test="@egovframework.com.cmm.util.EgovMybaitsUtil@isNotEmpty(payType)">
   			pay_type = #{payType},
   			</if>
   			upd_dt = now(),
   			upd_id = #{updId}
		WHERE room_cd = #{roomCd}
		AND room_num = #{roomNum}
		AND rent_seq = #{rentSeq}
   	</update>
 
	<!-- 독서실 개별정보를 가져온다.  -->
	<select id="selectRoomRentOrdList"  parameterType="egovframework.com.academy.room.service.RoomVO" 
										resultType="egovframework.com.academy.room.service.RoomVO">
		SELECT room_cd, room_num, rent_seq, user_id, rent_start, rent_end, extend_yn, rent_type, ord_id, rent_memo, pay_type, 
				reg_dt, reg_id, upd_dt, upd_id
		FROM acm_room_rent a
		WHERE a.room_cd = #{roomCd}
		AND a.room_num = #{roomNum}
		ORDER BY a.rent_seq DESC
	</select>

</mapper>
